### YamlMime:ManagedReference
items:
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  commentId: T:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  id: UserServiceBase`3
  parent: NuvTools.Security.Identity.AspNetCore.Services
  children:
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.#ctor(Microsoft.AspNetCore.Identity.UserManager{`0},Microsoft.AspNetCore.Identity.RoleManager{`1},NuvTools.Notification.Mail.IMailService)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangeEmailAsync(`2,NuvTools.Security.Identity.Models.Form.UpdateProfileForm)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangePasswordAsync(`2,NuvTools.Security.Identity.Models.Form.ChangePasswordForm)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ConfirmEmailAsync(`2,System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAndSendConfirmationEmailAsync(`0,System.String,System.String,System.String,System.String[])
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAsync(`0)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateWithRolesAsync(`0,System.String[])
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.DeleteAsync(`2)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationTokenAsync(`0)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationUriAsync(`0,System.String,System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAllAsync
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAsync(`2)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetByEmailAsync(System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetRolesAsync(System.Int32)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestChangeEmailAsync(System.String,System.String,System.String,System.String,System.String,System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestResetPasswordAsync(System.String,System.String,System.String,System.String,System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ResetPasswordAsync(NuvTools.Security.Identity.Models.Form.ResetPasswordForm)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.SendConfirmationEmailAsync(`0,System.String,System.String,System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ToggleUserStatusAsync(`2)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateAsync(`0)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateRolesAsync(NuvTools.Security.Identity.Models.UserRoles)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3._mailService
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3._roleManager
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3._userManager
  langs:
  - csharp
  - vb
  name: UserServiceBase<TUser, TRole, TKey>
  nameWithType: UserServiceBase<TUser, TRole, TKey>
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>
  type: Class
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: 'public abstract class UserServiceBase<TUser, TRole, TKey> where TUser : UserBase<TKey> where TRole : IdentityRole<TKey> where TKey : IEquatable<TKey>'
    typeParameters:
    - id: TUser
    - id: TRole
    - id: TKey
    content.vb: Public MustInherit Class UserServiceBase(Of TUser As UserBase(Of TKey), TRole As IdentityRole(Of TKey), TKey As IEquatable(Of TKey))
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey)
  name.vb: UserServiceBase(Of TUser, TRole, TKey)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3._userManager
  commentId: F:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3._userManager
  id: _userManager
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: _userManager
  nameWithType: UserServiceBase<TUser, TRole, TKey>._userManager
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>._userManager
  type: Field
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: protected readonly UserManager<TUser> _userManager
    return:
      type: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    content.vb: Protected ReadOnly _userManager As UserManager(Of TUser)
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey)._userManager
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey)._userManager
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3._roleManager
  commentId: F:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3._roleManager
  id: _roleManager
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: _roleManager
  nameWithType: UserServiceBase<TUser, TRole, TKey>._roleManager
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>._roleManager
  type: Field
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: protected readonly RoleManager<TRole> _roleManager
    return:
      type: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    content.vb: Protected ReadOnly _roleManager As RoleManager(Of TRole)
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey)._roleManager
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey)._roleManager
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3._mailService
  commentId: F:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3._mailService
  id: _mailService
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: _mailService
  nameWithType: UserServiceBase<TUser, TRole, TKey>._mailService
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>._mailService
  type: Field
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: protected readonly IMailService _mailService
    return:
      type: NuvTools.Notification.Mail.IMailService
    content.vb: Protected ReadOnly _mailService As IMailService
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey)._mailService
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey)._mailService
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.#ctor(Microsoft.AspNetCore.Identity.UserManager{`0},Microsoft.AspNetCore.Identity.RoleManager{`1},NuvTools.Notification.Mail.IMailService)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.#ctor(Microsoft.AspNetCore.Identity.UserManager{`0},Microsoft.AspNetCore.Identity.RoleManager{`1},NuvTools.Notification.Mail.IMailService)
  id: '#ctor(Microsoft.AspNetCore.Identity.UserManager{`0},Microsoft.AspNetCore.Identity.RoleManager{`1},NuvTools.Notification.Mail.IMailService)'
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: UserServiceBase(UserManager<TUser>, RoleManager<TRole>, IMailService)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.UserServiceBase(UserManager<TUser>, RoleManager<TRole>, IMailService)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.UserServiceBase(Microsoft.AspNetCore.Identity.UserManager<TUser>, Microsoft.AspNetCore.Identity.RoleManager<TRole>, NuvTools.Notification.Mail.IMailService)
  type: Constructor
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public UserServiceBase(UserManager<TUser> userManager, RoleManager<TRole> roleManager, IMailService mailService)
    parameters:
    - id: userManager
      type: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    - id: roleManager
      type: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    - id: mailService
      type: NuvTools.Notification.Mail.IMailService
    content.vb: Public Sub New(userManager As UserManager(Of TUser), roleManager As RoleManager(Of TRole), mailService As IMailService)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.#ctor*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).New(UserManager(Of TUser), RoleManager(Of TRole), IMailService)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).New(Microsoft.AspNetCore.Identity.UserManager(Of TUser), Microsoft.AspNetCore.Identity.RoleManager(Of TRole), NuvTools.Notification.Mail.IMailService)
  name.vb: New(UserManager(Of TUser), RoleManager(Of TRole), IMailService)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAllAsync
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAllAsync
  id: GetAllAsync
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: GetAllAsync()
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetAllAsync()
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetAllAsync()
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public IQueryable<TUser> GetAllAsync()
    return:
      type: System.Linq.IQueryable{{TUser}}
    content.vb: Public Function GetAllAsync() As IQueryable(Of TUser)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAllAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetAllAsync()
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetAllAsync()
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAsync(`2)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAsync(`2)
  id: GetAsync(`2)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: GetAsync(TKey)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetAsync(TKey)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetAsync(TKey)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<TUser> GetAsync(TKey id)
    parameters:
    - id: id
      type: '{TKey}'
    return:
      type: System.Threading.Tasks.Task{{TUser}}
    content.vb: Public Function GetAsync(id As TKey) As Task(Of TUser)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetAsync(TKey)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetAsync(TKey)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetByEmailAsync(System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetByEmailAsync(System.String)
  id: GetByEmailAsync(System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: GetByEmailAsync(string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetByEmailAsync(string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetByEmailAsync(string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<TUser> GetByEmailAsync(string email)
    parameters:
    - id: email
      type: System.String
    return:
      type: System.Threading.Tasks.Task{{TUser}}
    content.vb: Public Function GetByEmailAsync(email As String) As Task(Of TUser)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetByEmailAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetByEmailAsync(String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetByEmailAsync(String)
  name.vb: GetByEmailAsync(String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.DeleteAsync(`2)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.DeleteAsync(`2)
  id: DeleteAsync(`2)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: DeleteAsync(TKey)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.DeleteAsync(TKey)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.DeleteAsync(TKey)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult> DeleteAsync(TKey id)
    parameters:
    - id: id
      type: '{TKey}'
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function DeleteAsync(id As TKey) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.DeleteAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).DeleteAsync(TKey)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).DeleteAsync(TKey)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAsync(`0)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAsync(`0)
  id: CreateAsync(`0)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: CreateAsync(TUser)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.CreateAsync(TUser)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.CreateAsync(TUser)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult<TKey>> CreateAsync(TUser value)
    parameters:
    - id: value
      type: '{TUser}'
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{{TKey}}}
    content.vb: Public Function CreateAsync(value As TUser) As Task(Of IResult(Of TKey))
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).CreateAsync(TUser)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).CreateAsync(TUser)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateWithRolesAsync(`0,System.String[])
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateWithRolesAsync(`0,System.String[])
  id: CreateWithRolesAsync(`0,System.String[])
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: CreateWithRolesAsync(TUser, params string[])
  nameWithType: UserServiceBase<TUser, TRole, TKey>.CreateWithRolesAsync(TUser, params string[])
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.CreateWithRolesAsync(TUser, params string[])
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult<TKey>> CreateWithRolesAsync(TUser value, params string[] roles)
    parameters:
    - id: value
      type: '{TUser}'
    - id: roles
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{{TKey}}}
    content.vb: Public Function CreateWithRolesAsync(value As TUser, ParamArray roles As String()) As Task(Of IResult(Of TKey))
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateWithRolesAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).CreateWithRolesAsync(TUser, ParamArray String())
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).CreateWithRolesAsync(TUser, ParamArray String())
  name.vb: CreateWithRolesAsync(TUser, ParamArray String())
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateAsync(`0)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateAsync(`0)
  id: UpdateAsync(`0)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: UpdateAsync(TUser)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.UpdateAsync(TUser)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.UpdateAsync(TUser)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult> UpdateAsync(TUser value)
    parameters:
    - id: value
      type: '{TUser}'
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function UpdateAsync(value As TUser) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).UpdateAsync(TUser)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).UpdateAsync(TUser)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ToggleUserStatusAsync(`2)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ToggleUserStatusAsync(`2)
  id: ToggleUserStatusAsync(`2)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: ToggleUserStatusAsync(TKey)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ToggleUserStatusAsync(TKey)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ToggleUserStatusAsync(TKey)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public virtual Task<IResult> ToggleUserStatusAsync(TKey id)
    parameters:
    - id: id
      type: '{TKey}'
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Overridable Function ToggleUserStatusAsync(id As TKey) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ToggleUserStatusAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ToggleUserStatusAsync(TKey)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ToggleUserStatusAsync(TKey)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAndSendConfirmationEmailAsync(`0,System.String,System.String,System.String,System.String[])
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAndSendConfirmationEmailAsync(`0,System.String,System.String,System.String,System.String[])
  id: CreateAndSendConfirmationEmailAsync(`0,System.String,System.String,System.String,System.String[])
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: CreateAndSendConfirmationEmailAsync(TUser, string, string, string, params string[])
  nameWithType: UserServiceBase<TUser, TRole, TKey>.CreateAndSendConfirmationEmailAsync(TUser, string, string, string, params string[])
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.CreateAndSendConfirmationEmailAsync(TUser, string, string, string, params string[])
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult<TKey>> CreateAndSendConfirmationEmailAsync(TUser value, string origin, string message = null, string subject = null, params string[] roles)
    parameters:
    - id: value
      type: '{TUser}'
    - id: origin
      type: System.String
    - id: message
      type: System.String
    - id: subject
      type: System.String
    - id: roles
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{{TKey}}}
    content.vb: Public Function CreateAndSendConfirmationEmailAsync(value As TUser, origin As String, message As String = Nothing, subject As String = Nothing, ParamArray roles As String()) As Task(Of IResult(Of TKey))
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAndSendConfirmationEmailAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).CreateAndSendConfirmationEmailAsync(TUser, String, String, String, ParamArray String())
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).CreateAndSendConfirmationEmailAsync(TUser, String, String, String, ParamArray String())
  name.vb: CreateAndSendConfirmationEmailAsync(TUser, String, String, String, ParamArray String())
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.SendConfirmationEmailAsync(`0,System.String,System.String,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.SendConfirmationEmailAsync(`0,System.String,System.String,System.String)
  id: SendConfirmationEmailAsync(`0,System.String,System.String,System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: SendConfirmationEmailAsync(TUser, string, string, string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.SendConfirmationEmailAsync(TUser, string, string, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.SendConfirmationEmailAsync(TUser, string, string, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult<TKey>> SendConfirmationEmailAsync(TUser value, string origin, string message = null, string subject = null)
    parameters:
    - id: value
      type: '{TUser}'
    - id: origin
      type: System.String
    - id: message
      type: System.String
    - id: subject
      type: System.String
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{{TKey}}}
    content.vb: Public Function SendConfirmationEmailAsync(value As TUser, origin As String, message As String = Nothing, subject As String = Nothing) As Task(Of IResult(Of TKey))
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.SendConfirmationEmailAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).SendConfirmationEmailAsync(TUser, String, String, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).SendConfirmationEmailAsync(TUser, String, String, String)
  name.vb: SendConfirmationEmailAsync(TUser, String, String, String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationUriAsync(`0,System.String,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationUriAsync(`0,System.String,System.String)
  id: GenerateEmailConfirmationUriAsync(`0,System.String,System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: GenerateEmailConfirmationUriAsync(TUser, string, string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationUriAsync(TUser, string, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationUriAsync(TUser, string, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<string> GenerateEmailConfirmationUriAsync(TUser value, string origin, string route = "login")
    parameters:
    - id: value
      type: '{TUser}'
    - id: origin
      type: System.String
    - id: route
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function GenerateEmailConfirmationUriAsync(value As TUser, origin As String, route As String = "login") As Task(Of String)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationUriAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationUriAsync(TUser, String, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationUriAsync(TUser, String, String)
  name.vb: GenerateEmailConfirmationUriAsync(TUser, String, String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationTokenAsync(`0)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationTokenAsync(`0)
  id: GenerateEmailConfirmationTokenAsync(`0)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: GenerateEmailConfirmationTokenAsync(TUser)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationTokenAsync(TUser)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationTokenAsync(TUser)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<string> GenerateEmailConfirmationTokenAsync(TUser value)
    parameters:
    - id: value
      type: '{TUser}'
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function GenerateEmailConfirmationTokenAsync(value As TUser) As Task(Of String)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationTokenAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationTokenAsync(TUser)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationTokenAsync(TUser)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ConfirmEmailAsync(`2,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ConfirmEmailAsync(`2,System.String)
  id: ConfirmEmailAsync(`2,System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: ConfirmEmailAsync(TKey, string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ConfirmEmailAsync(TKey, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ConfirmEmailAsync(TKey, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult> ConfirmEmailAsync(TKey id, string token)
    parameters:
    - id: id
      type: '{TKey}'
    - id: token
      type: System.String
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function ConfirmEmailAsync(id As TKey, token As String) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ConfirmEmailAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ConfirmEmailAsync(TKey, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ConfirmEmailAsync(TKey, String)
  name.vb: ConfirmEmailAsync(TKey, String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestChangeEmailAsync(System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestChangeEmailAsync(System.String,System.String,System.String,System.String,System.String,System.String)
  id: RequestChangeEmailAsync(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: RequestChangeEmailAsync(string, string, string, string, string, string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.RequestChangeEmailAsync(string, string, string, string, string, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.RequestChangeEmailAsync(string, string, string, string, string, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult> RequestChangeEmailAsync(string email, string newEmail, string origin, string message = null, string subject = null, string route = "security/change-email")
    parameters:
    - id: email
      type: System.String
    - id: newEmail
      type: System.String
    - id: origin
      type: System.String
    - id: message
      type: System.String
    - id: subject
      type: System.String
    - id: route
      type: System.String
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function RequestChangeEmailAsync(email As String, newEmail As String, origin As String, message As String = Nothing, subject As String = Nothing, route As String = "security/change-email") As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestChangeEmailAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).RequestChangeEmailAsync(String, String, String, String, String, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).RequestChangeEmailAsync(String, String, String, String, String, String)
  name.vb: RequestChangeEmailAsync(String, String, String, String, String, String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangeEmailAsync(`2,NuvTools.Security.Identity.Models.Form.UpdateProfileForm)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangeEmailAsync(`2,NuvTools.Security.Identity.Models.Form.UpdateProfileForm)
  id: ChangeEmailAsync(`2,NuvTools.Security.Identity.Models.Form.UpdateProfileForm)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: ChangeEmailAsync(TKey, UpdateProfileForm)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ChangeEmailAsync(TKey, UpdateProfileForm)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ChangeEmailAsync(TKey, NuvTools.Security.Identity.Models.Form.UpdateProfileForm)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult> ChangeEmailAsync(TKey id, UpdateProfileForm value)
    parameters:
    - id: id
      type: '{TKey}'
    - id: value
      type: NuvTools.Security.Identity.Models.Form.UpdateProfileForm
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function ChangeEmailAsync(id As TKey, value As UpdateProfileForm) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangeEmailAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ChangeEmailAsync(TKey, UpdateProfileForm)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ChangeEmailAsync(TKey, NuvTools.Security.Identity.Models.Form.UpdateProfileForm)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangePasswordAsync(`2,NuvTools.Security.Identity.Models.Form.ChangePasswordForm)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangePasswordAsync(`2,NuvTools.Security.Identity.Models.Form.ChangePasswordForm)
  id: ChangePasswordAsync(`2,NuvTools.Security.Identity.Models.Form.ChangePasswordForm)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: ChangePasswordAsync(TKey, ChangePasswordForm)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ChangePasswordAsync(TKey, ChangePasswordForm)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ChangePasswordAsync(TKey, NuvTools.Security.Identity.Models.Form.ChangePasswordForm)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult> ChangePasswordAsync(TKey id, ChangePasswordForm value)
    parameters:
    - id: id
      type: '{TKey}'
    - id: value
      type: NuvTools.Security.Identity.Models.Form.ChangePasswordForm
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function ChangePasswordAsync(id As TKey, value As ChangePasswordForm) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangePasswordAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ChangePasswordAsync(TKey, ChangePasswordForm)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ChangePasswordAsync(TKey, NuvTools.Security.Identity.Models.Form.ChangePasswordForm)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestResetPasswordAsync(System.String,System.String,System.String,System.String,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestResetPasswordAsync(System.String,System.String,System.String,System.String,System.String)
  id: RequestResetPasswordAsync(System.String,System.String,System.String,System.String,System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: RequestResetPasswordAsync(string, string, string, string, string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.RequestResetPasswordAsync(string, string, string, string, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.RequestResetPasswordAsync(string, string, string, string, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult> RequestResetPasswordAsync(string email, string origin, string message = null, string subject = null, string route = "security/reset-password")
    parameters:
    - id: email
      type: System.String
    - id: origin
      type: System.String
    - id: message
      type: System.String
    - id: subject
      type: System.String
    - id: route
      type: System.String
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function RequestResetPasswordAsync(email As String, origin As String, message As String = Nothing, subject As String = Nothing, route As String = "security/reset-password") As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestResetPasswordAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).RequestResetPasswordAsync(String, String, String, String, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).RequestResetPasswordAsync(String, String, String, String, String)
  name.vb: RequestResetPasswordAsync(String, String, String, String, String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ResetPasswordAsync(NuvTools.Security.Identity.Models.Form.ResetPasswordForm)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ResetPasswordAsync(NuvTools.Security.Identity.Models.Form.ResetPasswordForm)
  id: ResetPasswordAsync(NuvTools.Security.Identity.Models.Form.ResetPasswordForm)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: ResetPasswordAsync(ResetPasswordForm)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ResetPasswordAsync(ResetPasswordForm)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ResetPasswordAsync(NuvTools.Security.Identity.Models.Form.ResetPasswordForm)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult> ResetPasswordAsync(ResetPasswordForm value)
    parameters:
    - id: value
      type: NuvTools.Security.Identity.Models.Form.ResetPasswordForm
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function ResetPasswordAsync(value As ResetPasswordForm) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ResetPasswordAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ResetPasswordAsync(ResetPasswordForm)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ResetPasswordAsync(NuvTools.Security.Identity.Models.Form.ResetPasswordForm)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetRolesAsync(System.Int32)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetRolesAsync(System.Int32)
  id: GetRolesAsync(System.Int32)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: GetRolesAsync(int)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetRolesAsync(int)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetRolesAsync(int)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IList<string>> GetRolesAsync(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{System.String}}
    content.vb: Public Function GetRolesAsync(id As Integer) As Task(Of IList(Of String))
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetRolesAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetRolesAsync(Integer)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetRolesAsync(Integer)
  name.vb: GetRolesAsync(Integer)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateRolesAsync(NuvTools.Security.Identity.Models.UserRoles)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateRolesAsync(NuvTools.Security.Identity.Models.UserRoles)
  id: UpdateRolesAsync(NuvTools.Security.Identity.Models.UserRoles)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: UpdateRolesAsync(UserRoles)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.UpdateRolesAsync(UserRoles)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.UpdateRolesAsync(NuvTools.Security.Identity.Models.UserRoles)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  syntax:
    content: public Task<IResult> UpdateRolesAsync(UserRoles value)
    parameters:
    - id: value
      type: NuvTools.Security.Identity.Models.UserRoles
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function UpdateRolesAsync(value As UserRoles) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateRolesAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).UpdateRolesAsync(UserRoles)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).UpdateRolesAsync(NuvTools.Security.Identity.Models.UserRoles)
references:
- uid: NuvTools.Security.Identity.AspNetCore.Services
  commentId: N:NuvTools.Security.Identity.AspNetCore.Services
  isExternal: true
  href: NuvTools.html
  name: NuvTools.Security.Identity.AspNetCore.Services
  nameWithType: NuvTools.Security.Identity.AspNetCore.Services
  fullName: NuvTools.Security.Identity.AspNetCore.Services
  spec.csharp:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Security
    name: Security
    isExternal: true
    href: NuvTools.Security.html
  - name: .
  - uid: NuvTools.Security.Identity
    name: Identity
    isExternal: true
    href: NuvTools.Security.Identity.html
  - name: .
  - uid: NuvTools.Security.Identity.AspNetCore
    name: AspNetCore
    isExternal: true
    href: NuvTools.Security.Identity.AspNetCore.html
  - name: .
  - uid: NuvTools.Security.Identity.AspNetCore.Services
    name: Services
    isExternal: true
    href: NuvTools.Security.Identity.AspNetCore.Services.html
  spec.vb:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Security
    name: Security
    isExternal: true
    href: NuvTools.Security.html
  - name: .
  - uid: NuvTools.Security.Identity
    name: Identity
    isExternal: true
    href: NuvTools.Security.Identity.html
  - name: .
  - uid: NuvTools.Security.Identity.AspNetCore
    name: AspNetCore
    isExternal: true
    href: NuvTools.Security.Identity.AspNetCore.html
  - name: .
  - uid: NuvTools.Security.Identity.AspNetCore.Services
    name: Services
    isExternal: true
    href: NuvTools.Security.Identity.AspNetCore.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.UserManager{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: <
  - name: TUser
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TUser
  - name: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  commentId: T:Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: <
  - name: TUser
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TUser
  - name: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity
- uid: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
  commentId: T:Microsoft.AspNetCore.Identity.RoleManager{``0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.RoleManager`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  name: RoleManager<TRole>
  nameWithType: RoleManager<TRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<TRole>
  nameWithType.vb: RoleManager(Of TRole)
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of TRole)
  name.vb: RoleManager(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: <
  - name: TRole
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TRole
  - name: )
- uid: Microsoft.AspNetCore.Identity.RoleManager`1
  commentId: T:Microsoft.AspNetCore.Identity.RoleManager`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  name: RoleManager<TRole>
  nameWithType: RoleManager<TRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<TRole>
  nameWithType.vb: RoleManager(Of TRole)
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of TRole)
  name.vb: RoleManager(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: <
  - name: TRole
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TRole
  - name: )
- uid: NuvTools.Notification.Mail.IMailService
  commentId: T:NuvTools.Notification.Mail.IMailService
  parent: NuvTools.Notification.Mail
  isExternal: true
  name: IMailService
  nameWithType: IMailService
  fullName: NuvTools.Notification.Mail.IMailService
- uid: NuvTools.Notification.Mail
  commentId: N:NuvTools.Notification.Mail
  isExternal: true
  name: NuvTools.Notification.Mail
  nameWithType: NuvTools.Notification.Mail
  fullName: NuvTools.Notification.Mail
  spec.csharp:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
  - name: .
  - uid: NuvTools.Notification
    name: Notification
    isExternal: true
  - name: .
  - uid: NuvTools.Notification.Mail
    name: Mail
    isExternal: true
  spec.vb:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
  - name: .
  - uid: NuvTools.Notification
    name: Notification
    isExternal: true
  - name: .
  - uid: NuvTools.Notification.Mail
    name: Mail
    isExternal: true
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.#ctor*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.#ctor
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3__ctor_Microsoft_AspNetCore_Identity_UserManager__0__Microsoft_AspNetCore_Identity_RoleManager__1__NuvTools_Notification_Mail_IMailService_
  name: UserServiceBase
  nameWithType: UserServiceBase<TUser, TRole, TKey>.UserServiceBase
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.UserServiceBase
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).New
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).New
  name.vb: New
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAllAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAllAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_GetAllAsync
  name: GetAllAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetAllAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetAllAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetAllAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetAllAsync
- uid: System.Linq.IQueryable{{TUser}}
  commentId: T:System.Linq.IQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<TUser>
  nameWithType: IQueryable<TUser>
  fullName: System.Linq.IQueryable<TUser>
  nameWithType.vb: IQueryable(Of TUser)
  fullName.vb: System.Linq.IQueryable(Of TUser)
  name.vb: IQueryable(Of TUser)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: TUser
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: TUser
  - name: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_GetAsync__2_
  name: GetAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetAsync
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Threading.Tasks.Task{{TUser}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TUser>
  nameWithType: Task<TUser>
  fullName: System.Threading.Tasks.Task<TUser>
  nameWithType.vb: Task(Of TUser)
  fullName.vb: System.Threading.Tasks.Task(Of TUser)
  name.vb: Task(Of TUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TUser
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TUser
  - name: )
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetByEmailAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetByEmailAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_GetByEmailAsync_System_String_
  name: GetByEmailAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetByEmailAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetByEmailAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetByEmailAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetByEmailAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.DeleteAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.DeleteAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_DeleteAsync__2_
  name: DeleteAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.DeleteAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.DeleteAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).DeleteAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).DeleteAsync
- uid: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
  commentId: T:System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IResult>
  nameWithType: Task<IResult>
  fullName: System.Threading.Tasks.Task<NuvTools.Common.ResultWrapper.IResult>
  nameWithType.vb: Task(Of IResult)
  fullName.vb: System.Threading.Tasks.Task(Of NuvTools.Common.ResultWrapper.IResult)
  name.vb: Task(Of IResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: NuvTools.Common.ResultWrapper.IResult
    name: IResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: NuvTools.Common.ResultWrapper.IResult
    name: IResult
    isExternal: true
  - name: )
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_CreateAsync__0_
  name: CreateAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.CreateAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.CreateAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).CreateAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).CreateAsync
- uid: '{TUser}'
  commentId: '!:TUser'
  definition: TUser
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{{TKey}}}
  commentId: T:System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{`2}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IResult<TKey>>
  nameWithType: Task<IResult<TKey>>
  fullName: System.Threading.Tasks.Task<NuvTools.Common.ResultWrapper.IResult<TKey>>
  nameWithType.vb: Task(Of IResult(Of TKey))
  fullName.vb: System.Threading.Tasks.Task(Of NuvTools.Common.ResultWrapper.IResult(Of TKey))
  name.vb: Task(Of IResult(Of TKey))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: NuvTools.Common.ResultWrapper.IResult`1
    name: IResult
    isExternal: true
  - name: <
  - name: TKey
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: NuvTools.Common.ResultWrapper.IResult`1
    name: IResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: TUser
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateWithRolesAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateWithRolesAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_CreateWithRolesAsync__0_System_String___
  name: CreateWithRolesAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.CreateWithRolesAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.CreateWithRolesAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).CreateWithRolesAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).CreateWithRolesAsync
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_UpdateAsync__0_
  name: UpdateAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.UpdateAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.UpdateAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).UpdateAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).UpdateAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ToggleUserStatusAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ToggleUserStatusAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_ToggleUserStatusAsync__2_
  name: ToggleUserStatusAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ToggleUserStatusAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ToggleUserStatusAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ToggleUserStatusAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ToggleUserStatusAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAndSendConfirmationEmailAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAndSendConfirmationEmailAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_CreateAndSendConfirmationEmailAsync__0_System_String_System_String_System_String_System_String___
  name: CreateAndSendConfirmationEmailAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.CreateAndSendConfirmationEmailAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.CreateAndSendConfirmationEmailAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).CreateAndSendConfirmationEmailAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).CreateAndSendConfirmationEmailAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.SendConfirmationEmailAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.SendConfirmationEmailAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_SendConfirmationEmailAsync__0_System_String_System_String_System_String_
  name: SendConfirmationEmailAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.SendConfirmationEmailAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.SendConfirmationEmailAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).SendConfirmationEmailAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).SendConfirmationEmailAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationUriAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationUriAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_GenerateEmailConfirmationUriAsync__0_System_String_System_String_
  name: GenerateEmailConfirmationUriAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationUriAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationUriAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationUriAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationUriAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationTokenAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationTokenAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_GenerateEmailConfirmationTokenAsync__0_
  name: GenerateEmailConfirmationTokenAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationTokenAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationTokenAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationTokenAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationTokenAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ConfirmEmailAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ConfirmEmailAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_ConfirmEmailAsync__2_System_String_
  name: ConfirmEmailAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ConfirmEmailAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ConfirmEmailAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ConfirmEmailAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ConfirmEmailAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestChangeEmailAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestChangeEmailAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_RequestChangeEmailAsync_System_String_System_String_System_String_System_String_System_String_System_String_
  name: RequestChangeEmailAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.RequestChangeEmailAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.RequestChangeEmailAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).RequestChangeEmailAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).RequestChangeEmailAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangeEmailAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangeEmailAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_ChangeEmailAsync__2_NuvTools_Security_Identity_Models_Form_UpdateProfileForm_
  name: ChangeEmailAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ChangeEmailAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ChangeEmailAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ChangeEmailAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ChangeEmailAsync
- uid: NuvTools.Security.Identity.Models.Form.UpdateProfileForm
  commentId: T:NuvTools.Security.Identity.Models.Form.UpdateProfileForm
  parent: NuvTools.Security.Identity.Models.Form
  isExternal: true
  href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.Models/Form/UpdateProfileForm.cs
  name: UpdateProfileForm
  nameWithType: UpdateProfileForm
  fullName: NuvTools.Security.Identity.Models.Form.UpdateProfileForm
- uid: NuvTools.Security.Identity.Models.Form
  commentId: N:NuvTools.Security.Identity.Models.Form
  isExternal: true
  href: NuvTools.html
  name: NuvTools.Security.Identity.Models.Form
  nameWithType: NuvTools.Security.Identity.Models.Form
  fullName: NuvTools.Security.Identity.Models.Form
  spec.csharp:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Security
    name: Security
    isExternal: true
    href: NuvTools.Security.html
  - name: .
  - uid: NuvTools.Security.Identity
    name: Identity
    isExternal: true
    href: NuvTools.Security.Identity.html
  - name: .
  - uid: NuvTools.Security.Identity.Models
    name: Models
    isExternal: true
    href: NuvTools.Security.Identity.Models.html
  - name: .
  - uid: NuvTools.Security.Identity.Models.Form
    name: Form
    isExternal: true
    href: NuvTools.Security.Identity.Models.Form.html
  spec.vb:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Security
    name: Security
    isExternal: true
    href: NuvTools.Security.html
  - name: .
  - uid: NuvTools.Security.Identity
    name: Identity
    isExternal: true
    href: NuvTools.Security.Identity.html
  - name: .
  - uid: NuvTools.Security.Identity.Models
    name: Models
    isExternal: true
    href: NuvTools.Security.Identity.Models.html
  - name: .
  - uid: NuvTools.Security.Identity.Models.Form
    name: Form
    isExternal: true
    href: NuvTools.Security.Identity.Models.Form.html
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangePasswordAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangePasswordAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_ChangePasswordAsync__2_NuvTools_Security_Identity_Models_Form_ChangePasswordForm_
  name: ChangePasswordAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ChangePasswordAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ChangePasswordAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ChangePasswordAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ChangePasswordAsync
- uid: NuvTools.Security.Identity.Models.Form.ChangePasswordForm
  commentId: T:NuvTools.Security.Identity.Models.Form.ChangePasswordForm
  parent: NuvTools.Security.Identity.Models.Form
  isExternal: true
  href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.Models/Form/ChangePasswordForm.cs
  name: ChangePasswordForm
  nameWithType: ChangePasswordForm
  fullName: NuvTools.Security.Identity.Models.Form.ChangePasswordForm
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestResetPasswordAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestResetPasswordAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_RequestResetPasswordAsync_System_String_System_String_System_String_System_String_System_String_
  name: RequestResetPasswordAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.RequestResetPasswordAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.RequestResetPasswordAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).RequestResetPasswordAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).RequestResetPasswordAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ResetPasswordAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ResetPasswordAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_ResetPasswordAsync_NuvTools_Security_Identity_Models_Form_ResetPasswordForm_
  name: ResetPasswordAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ResetPasswordAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ResetPasswordAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ResetPasswordAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ResetPasswordAsync
- uid: NuvTools.Security.Identity.Models.Form.ResetPasswordForm
  commentId: T:NuvTools.Security.Identity.Models.Form.ResetPasswordForm
  parent: NuvTools.Security.Identity.Models.Form
  isExternal: true
  href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.Models/Form/ResetPasswordForm.cs
  name: ResetPasswordForm
  nameWithType: ResetPasswordForm
  fullName: NuvTools.Security.Identity.Models.Form.ResetPasswordForm
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetRolesAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetRolesAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_GetRolesAsync_System_Int32_
  name: GetRolesAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetRolesAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetRolesAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetRolesAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetRolesAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IList<string>>
  nameWithType: Task<IList<string>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<string>>
  nameWithType.vb: Task(Of IList(Of String))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of String))
  name.vb: Task(Of IList(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateRolesAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateRolesAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_UpdateRolesAsync_NuvTools_Security_Identity_Models_UserRoles_
  name: UpdateRolesAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.UpdateRolesAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.UpdateRolesAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).UpdateRolesAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).UpdateRolesAsync
- uid: NuvTools.Security.Identity.Models.UserRoles
  commentId: T:NuvTools.Security.Identity.Models.UserRoles
  parent: NuvTools.Security.Identity.Models
  isExternal: true
  href: https://github.com/nuvtools/nuvtools-security-identity/blob/bfc33d00ec048c7ef8ba757e92d286067d8ebc39/src/NuvTools.Security.Identity.Models/UserRoles.cs
  name: UserRoles
  nameWithType: UserRoles
  fullName: NuvTools.Security.Identity.Models.UserRoles
- uid: NuvTools.Security.Identity.Models
  commentId: N:NuvTools.Security.Identity.Models
  isExternal: true
  href: NuvTools.html
  name: NuvTools.Security.Identity.Models
  nameWithType: NuvTools.Security.Identity.Models
  fullName: NuvTools.Security.Identity.Models
  spec.csharp:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Security
    name: Security
    isExternal: true
    href: NuvTools.Security.html
  - name: .
  - uid: NuvTools.Security.Identity
    name: Identity
    isExternal: true
    href: NuvTools.Security.Identity.html
  - name: .
  - uid: NuvTools.Security.Identity.Models
    name: Models
    isExternal: true
    href: NuvTools.Security.Identity.Models.html
  spec.vb:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Security
    name: Security
    isExternal: true
    href: NuvTools.Security.html
  - name: .
  - uid: NuvTools.Security.Identity
    name: Identity
    isExternal: true
    href: NuvTools.Security.Identity.html
  - name: .
  - uid: NuvTools.Security.Identity.Models
    name: Models
    isExternal: true
    href: NuvTools.Security.Identity.Models.html
